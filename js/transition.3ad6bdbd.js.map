{"version":3,"sources":["webpack:///./src/views/transition.vue?5ee2","webpack:///src/views/transition.vue","webpack:///./src/views/transition.vue?e7b6","webpack:///./src/views/transition.vue?7dfd","webpack:///./src/views/transition.vue?f1e9"],"names":["render","_vm","this","_h","$createElement","_self","_c","_m","staticRenderFns","staticClass","_v","staticStyle","attrs","name","component"],"mappings":"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","file":"js/transition.3ad6bdbd.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"transition\"},[_c('h2',[_vm._v(\"CSS-анимации: Transitions и Animations. Motion Path Module CSS\")]),_c('h3',[_vm._v(\"CSS transitions\")]),_c('p',[_vm._v(\" CSS transitions позволяют сделать изменения CSS-свойств плавно и в течение некоторого времени. Таким образом, вы получаете возможность контролировать процесс перехода элемента от одного состояния к другому. Начнем с простейшего примера и продолжим дальше. При наведении курсора на квадрат плавно изменяется цвет фона. \")]),_c('iframe',{staticStyle:{\"width\":\"80%\"},attrs:{\"height\":\"400\",\"scrolling\":\"no\",\"title\":\"KKzmJvw\",\"src\":\"https://codepen.io/steellett/embed/KKzmJvw?height=265&theme-id=dark&default-tab=css,result\",\"frameborder\":\"no\",\"loading\":\"lazy\",\"allowtransparency\":\"true\",\"allowfullscreen\":\"true\"}},[_vm._v(\" See the Pen \"),_c('a',{attrs:{\"href\":\"https://codepen.io/steellett/pen/KKzmJvw\"}},[_vm._v(\"KKzmJvw\")]),_vm._v(\" by steellett (\"),_c('a',{attrs:{\"href\":\"https://codepen.io/steellett\"}},[_vm._v(\"@steellett\")]),_vm._v(\") on \"),_c('a',{attrs:{\"href\":\"https://codepen.io\"}},[_vm._v(\"CodePen\")]),_vm._v(\". \")]),_c('p',[_vm._v(\" Теперь подробнее рассмотрим, как управлять переходами в CSS. У нас на вооружении есть всего 5 свойств, которые позволяют контролировать transition-анимацию: \")]),_c('ul',[_c('li',[_vm._v(\"transition-property;\")]),_c('li',[_vm._v(\"transition-duration;\")]),_c('li',[_vm._v(\"transition-timing-function;\")]),_c('li',[_vm._v(\"transition-delay;\")]),_c('li',[_vm._v(\"transition;\")])]),_c('p',[_c('b',[_vm._v(\"transition-property\")]),_vm._v(\" — указывает список свойств, которые будут анимироваться; свойства, которые здесь не указаны, будут изменяться обычным образом. Можно анимировать все свойства для конкретного элемента, указав значение all. Если вы не указали ни одного свойства, то по умолчанию используется значение all. Пример: \"),_c('b',[_c('i',[_vm._v(\"transition-property: width\")])]),_vm._v(\"; \")]),_c('p',[_c('b',[_vm._v(\" transition-duration\")]),_vm._v(\" — задаёт значение продолжительности анимации, время можно указывать в секундах или миллисекундах. Пример: \"),_c('b',[_c('i',[_vm._v(\" transition-duration: 1s\")])]),_vm._v(\"; \")]),_c('p',[_c('b',[_vm._v(\" transition-timing-function\")]),_vm._v(\" — временная функция, указывает точки ускорения и замедления за определенный период времени для контроля изменения скорости анимации. Проще говоря, с помощью этого свойства можно указать поведение для анимации. Например, мы можем ускорить анимацию в начале и замедлить в конце, либо наоборот. Для того, чтобы задать процесс анимации используются кривые Безье. Вообще, transition-timing-function позволяет сделать очень много разных поведений для анимаций, это целая тема для статьи, поэтому здесь мы не будем углубляться. Пример: \"),_c('b',[_c('i',[_vm._v(\" transition-timing-function: cubic-bezier(0, 0, 1, 1)\")])]),_vm._v(\"; \")]),_c('p',[_c('b',[_vm._v(\"transition-delay\")]),_vm._v(\" — задаёт задержку времени до начала анимации, можно указывать в секундах или миллисекундах. Пример: \"),_c('b',[_c('i',[_vm._v(\" transition-delay: 500ms\")])]),_vm._v(\"; \")]),_c('p',[_c('b',[_vm._v(\" transition\")]),_vm._v(\" — это общее свойство, которое позволяет перечислить первые четыре свойства в порядке: property, duration, timing-function, delay. Пример: \"),_c('b',[_c('i',[_vm._v(\" transition: background-color 1s cubic-bezier(0, 0, 1, 1) 500ms\")])]),_vm._v(\"; \")]),_c('p',[_vm._v(\" У нас получилась вот такая простая анимация: при наведении мышкой на квадрат изменяется ширина; продолжительность анимации одна секунда; анимация воспроизводится по линейной функции; задержка перед началом анимации 500 миллисекунд. \")]),_c('iframe',{staticStyle:{\"width\":\"80%\"},attrs:{\"height\":\"400\",\"scrolling\":\"no\",\"title\":\"VwabgMX\",\"src\":\"https://codepen.io/steellett/embed/VwabgMX?height=265&theme-id=dark&default-tab=css,result\",\"frameborder\":\"no\",\"loading\":\"lazy\",\"allowtransparency\":\"true\",\"allowfullscreen\":\"true\"}},[_vm._v(\" See the Pen \"),_c('a',{attrs:{\"href\":\"https://codepen.io/steellett/pen/VwabgMX\"}},[_vm._v(\"VwabgMX\")]),_vm._v(\" by steellett (\"),_c('a',{attrs:{\"href\":\"https://codepen.io/steellett\"}},[_vm._v(\"@steellett\")]),_vm._v(\") on \"),_c('a',{attrs:{\"href\":\"https://codepen.io\"}},[_vm._v(\"CodePen\")]),_vm._v(\". \")]),_c('p',[_vm._v(\" С помощью CSS transitions можно анимировать почти все свойства и создавать много интересных, красивых, функциональных и даже сложных анимаций, которые будут дополнять и улучшать ваш проект. Например, я сделал вот такой Material-FAB на чистом CSS, используя transitions: \")]),_c('iframe',{staticStyle:{\"width\":\"80%\"},attrs:{\"height\":\"400\",\"scrolling\":\"no\",\"title\":\"PoNmVJX\",\"src\":\"https://codepen.io/steellett/embed/PoNmVJX?height=265&theme-id=dark&default-tab=css,result\",\"frameborder\":\"no\",\"loading\":\"lazy\",\"allowtransparency\":\"true\",\"allowfullscreen\":\"true\"}},[_vm._v(\" See the Pen \"),_c('a',{attrs:{\"href\":\"https://codepen.io/steellett/pen/PoNmVJX\"}},[_vm._v(\"PoNmVJX\")]),_vm._v(\" by steellett (\"),_c('a',{attrs:{\"href\":\"https://codepen.io/steellett\"}},[_vm._v(\"@steellett\")]),_vm._v(\") on \"),_c('a',{attrs:{\"href\":\"https://codepen.io\"}},[_vm._v(\"CodePen\")]),_vm._v(\". \")]),_c('h3',[_vm._v(\"CSS animations\")]),_c('p',[_vm._v(\" CSS animations позволяют делать более сложные анимации, нежели CSS transitions. Весь секрет в @keyframes. Правило @keyframes позволяет создавать анимацию с помощью набора ключевых кадров, то есть описывает состояние объекта в определенный момент времени. Давайте рассмотрим простой пример. \")]),_c('p',[_vm._v(\"Наш круг ожил и он как будто пульсирует.\")]),_c('iframe',{staticStyle:{\"width\":\"80%\"},attrs:{\"height\":\"400\",\"scrolling\":\"no\",\"title\":\"QWNvYOL\",\"src\":\"https://codepen.io/steellett/embed/QWNvYOL?height=265&theme-id=dark&default-tab=css,result\",\"frameborder\":\"no\",\"loading\":\"lazy\",\"allowtransparency\":\"true\",\"allowfullscreen\":\"true\"}},[_vm._v(\" See the Pen \"),_c('a',{attrs:{\"href\":\"https://codepen.io/steellett/pen/QWNvYOL\"}},[_vm._v(\"QWNvYOL\")]),_vm._v(\" by steellett (\"),_c('a',{attrs:{\"href\":\"https://codepen.io/steellett\"}},[_vm._v(\"@steellett\")]),_vm._v(\") on \"),_c('a',{attrs:{\"href\":\"https://codepen.io\"}},[_vm._v(\"CodePen\")]),_vm._v(\". \")]),_c('p',[_vm._v(\"Есть 9 свойств, которые позволяют контролировать CSS animations:\")]),_c('ul',[_c('li',[_vm._v(\"animation-name;\")]),_c('li',[_vm._v(\"animation-duration;\")]),_c('li',[_vm._v(\"animation-timing-function;\")]),_c('li',[_vm._v(\"animation-delay;\")]),_c('li',[_vm._v(\"animation-iteration-count;\")]),_c('li',[_vm._v(\"animation-direction;\")]),_c('li',[_vm._v(\"animation-play-state;\")]),_c('li',[_vm._v(\"animation-fill-mode;\")]),_c('li',[_vm._v(\"animation;\")])]),_c('p',[_c('b',[_vm._v(\" animation-name\")]),_vm._v(\" — здесь указвается имя анимации, которое связывает правило @keyframes с селектором. Пример: \")]),_c('p',[_c('b',[_c('i',[_vm._v(\"animation-name: my-animation;\")])])]),_c('p',[_c('b',[_c('i',[_vm._v(\" @keyframes my-animation {\"),_c('br'),_vm._v(\" 0% { opacity: 0; }\"),_c('br'),_vm._v(\" 100% { opacity: 1; }\"),_c('br'),_vm._v(\" }\")])])]),_c('p',[_c('b',[_vm._v(\" animation-iteration-count\")]),_vm._v(\" — задаёт количество повторов анимации, значение по умолчанию 1. Значение infinite означает, что анимация будет проигрываться бесконечно. Пример: \")]),_c('p',[_c('b',[_c('i',[_vm._v(\" animation-iteration-count: 2;\")])])]),_c('p',[_vm._v(\"animation-direction — задаёт направление анимации. Пример:\")]),_c('p',[_c('b',[_c('i',[_vm._v(\"animation-direction: reverse; \")])])]),_c('p',[_c('b',[_vm._v(\" animation-play-state\")]),_vm._v(\" — данное свойство управляет остановкой и прогрыванием анимации. Есть два значения, running (анимация проигрывается, по умолчанию) и paused (останавливает анимацию). Пример: \")]),_c('p',[_c('b',[_c('i',[_vm._v(\"animation-play-state: paused; \")])])]),_c('p',[_vm._v(\" animation-fill-mode — устанавливает, какие CSS-свойства будут приминены к объекту до или после анимации. Может принимать такие значения: \")]),_c('ul',[_c('li',[_vm._v(\" none — анимируемые CSS-свойства применятся к объекту только во время воспроизведения анимации, по окончании объект возвращается в исходное состояние; \")]),_c('li',[_vm._v(\" forwards — анимируемые CSS-свойства применятся к объекту по окончании воспроизведения анимации; \")]),_c('li',[_vm._v(\" backwards — анимируемые CSS-свойства применятся к объекту до начала воспроизведения анимации; \")]),_c('li',[_vm._v(\" both — анимируемые CSS-свойства применятся к объекту и до начала, и после окончания воспроизведения анимации; \")])]),_c('p',[_vm._v(\"Пример:\")]),_c('p',[_c('b',[_c('i',[_vm._v(\"animation-fill-mode: backwards; \")])])]),_c('p',[_vm._v(\" Свойства \"),_c('b',[_vm._v(\" animation-duration, animation-timing-function, animation-delay\")]),_vm._v(\" работают так же, как аналогичные свойства в CSS transitions, о которых я писал раньше, поэтому не буду повторяться. \")]),_c('p',[_vm._v(\" С помощью animations CSS можно создавать довольно сложные анимации без использования JavaScript. Яркий пример — это лоадеры, то есть элементы, которые показывают, что на вашей страничке что-то загружается. Вот несколько примеров: \")]),_c('iframe',{staticStyle:{\"width\":\"80%\"},attrs:{\"height\":\"400\",\"scrolling\":\"no\",\"title\":\"OJNmdzq\",\"src\":\"https://codepen.io/steellett/embed/OJNmdzq?height=265&theme-id=dark&default-tab=css,result\",\"frameborder\":\"no\",\"loading\":\"lazy\",\"allowtransparency\":\"true\",\"allowfullscreen\":\"true\"}},[_vm._v(\" See the Pen \"),_c('a',{attrs:{\"href\":\"https://codepen.io/steellett/pen/OJNmdzq\"}},[_vm._v(\"OJNmdzq\")]),_vm._v(\" by steellett (\"),_c('a',{attrs:{\"href\":\"https://codepen.io/steellett\"}},[_vm._v(\"@steellett\")]),_vm._v(\") on \"),_c('a',{attrs:{\"href\":\"https://codepen.io\"}},[_vm._v(\"CodePen\")]),_vm._v(\". \")]),_c('h3',[_vm._v(\"Motion Path Module\")]),_c('p',[_vm._v(\" Motion Path Module CSS позволяет создавать движение объектов по контуру через специальное свойство motion-path. Раньше такую анимацию можно было сделать только с помощью SVG или сложных скриптов. \")]),_c('p',[_vm._v(\"В этой спецификаии есть 3 свойства:\")]),_c('ul',[_c('li',[_vm._v(\"motion-path;\")]),_c('li',[_vm._v(\"motion-offset;\")]),_c('li',[_vm._v(\"motion-rotation;\")])]),_c('p',[_c('b',[_vm._v(\" motion-path\")]),_vm._v(\" — это свойство позволяет указать точки(координаты) по которым будет двигаться объект. Синтаксис такой же как у SVG-атрибута path. Пример: \")]),_c('p',[_c('b',[_c('i',[_vm._v(\"motion-path: path('M 235,323 Q 412,440 365,615 Q 400,300 670,240 L 870,340 L 975,535 Q 730,600 630,535 z'); \")])])]),_c('p',[_c('b',[_vm._v(\" motion-offset\")]),_vm._v(\" — это свойство приводит объект в движение от начальной точки до конечной. Оно принимает либо двойное значение длины, либо проценты. Чтобы объект начал двигаться, нужно определить анимацию, которая будет идти от 0 до 100%. Пример: \")]),_c('p',[_c('b',[_c('i',[_vm._v(\"@keyframes airplane-fly { \"),_c('br'),_vm._v(\" 0% { motion-offset: 0; }\"),_c('br'),_vm._v(\" 100% { motion-offset: 100%; }\"),_c('br'),_vm._v(\" }\")])])]),_c('p',[_vm._v(\" motion-rotation — это свойство позволяет указать, какой стороной вперед будет двигаться объект. Можно указать auto, reverse или свое значение в градусах ('-45deg', '30deg' и т.д). Пример: \")]),_c('p',[_c('b',[_c('i',[_vm._v(\"motion-rotation: auto; \")])])]),_c('p',[_vm._v(\" К сожалению, motion-path пока что поддержывается только в Chrome и Opera, но будем надеяться, что остальные браузеры в скором времени возьмут с них пример, ведь штука действительно полезная. \")])])}]\n\nexport { render, staticRenderFns }","<template>\r\n  <div class=\"transition\">\r\n    <h2>CSS-анимации: Transitions и Animations. Motion Path Module CSS</h2>\r\n    <h3>CSS transitions</h3>\r\n    <p>\r\n      CSS transitions позволяют сделать изменения CSS-свойств плавно и в течение\r\n      некоторого времени. Таким образом, вы получаете возможность контролировать\r\n      процесс перехода элемента от одного состояния к другому. Начнем с\r\n      простейшего примера и продолжим дальше. При наведении курсора на квадрат\r\n      плавно изменяется цвет фона.\r\n    </p>\r\n    <iframe\r\n      height=\"400\"\r\n      style=\"width: 80%;\"\r\n      scrolling=\"no\"\r\n      title=\"KKzmJvw\"\r\n      src=\"https://codepen.io/steellett/embed/KKzmJvw?height=265&theme-id=dark&default-tab=css,result\"\r\n      frameborder=\"no\"\r\n      loading=\"lazy\"\r\n      allowtransparency=\"true\"\r\n      allowfullscreen=\"true\"\r\n    >\r\n      See the Pen\r\n      <a href=\"https://codepen.io/steellett/pen/KKzmJvw\">KKzmJvw</a> by\r\n      steellett (<a href=\"https://codepen.io/steellett\">@steellett</a>) on\r\n      <a href=\"https://codepen.io\">CodePen</a>.\r\n    </iframe>\r\n    <p>\r\n      Теперь подробнее рассмотрим, как управлять переходами в CSS. У нас на\r\n      вооружении есть всего 5 свойств, которые позволяют контролировать\r\n      transition-анимацию:\r\n    </p>\r\n    <ul>\r\n      <li>transition-property;</li>\r\n      <li>transition-duration;</li>\r\n      <li>transition-timing-function;</li>\r\n      <li>transition-delay;</li>\r\n      <li>transition;</li>\r\n    </ul>\r\n    <p>\r\n      <b>transition-property</b> — указывает список свойств, которые будут\r\n      анимироваться; свойства, которые здесь не указаны, будут изменяться\r\n      обычным образом. Можно анимировать все свойства для конкретного элемента,\r\n      указав значение all. Если вы не указали ни одного свойства, то по\r\n      умолчанию используется значение all. Пример:\r\n      <b><i>transition-property: width</i></b\r\n      >;\r\n    </p>\r\n    <p>\r\n      <b> transition-duration</b> — задаёт значение продолжительности анимации,\r\n      время можно указывать в секундах или миллисекундах. Пример:\r\n      <b><i> transition-duration: 1s</i></b\r\n      >;\r\n    </p>\r\n    <p>\r\n      <b> transition-timing-function</b> — временная функция, указывает точки\r\n      ускорения и замедления за определенный период времени для контроля\r\n      изменения скорости анимации. Проще говоря, с помощью этого свойства можно\r\n      указать поведение для анимации. Например, мы можем ускорить анимацию в\r\n      начале и замедлить в конце, либо наоборот. Для того, чтобы задать процесс\r\n      анимации используются кривые Безье. Вообще, transition-timing-function\r\n      позволяет сделать очень много разных поведений для анимаций, это целая\r\n      тема для статьи, поэтому здесь мы не будем углубляться. Пример:\r\n      <b><i> transition-timing-function: cubic-bezier(0, 0, 1, 1)</i></b\r\n      >;\r\n    </p>\r\n    <p>\r\n      <b>transition-delay</b> — задаёт задержку времени до начала анимации,\r\n      можно указывать в секундах или миллисекундах. Пример:\r\n      <b><i> transition-delay: 500ms</i></b\r\n      >;\r\n    </p>\r\n    <p>\r\n      <b> transition</b> — это общее свойство, которое позволяет перечислить\r\n      первые четыре свойства в порядке: property, duration, timing-function,\r\n      delay. Пример:\r\n      <b\r\n        ><i>\r\n          transition: background-color 1s cubic-bezier(0, 0, 1, 1) 500ms</i\r\n        ></b\r\n      >;\r\n    </p>\r\n    <p>\r\n      У нас получилась вот такая простая анимация: при наведении мышкой на\r\n      квадрат изменяется ширина; продолжительность анимации одна секунда;\r\n      анимация воспроизводится по линейной функции; задержка перед началом\r\n      анимации 500 миллисекунд.\r\n    </p>\r\n    <iframe\r\n      height=\"400\"\r\n      style=\"width: 80%;\"\r\n      scrolling=\"no\"\r\n      title=\"VwabgMX\"\r\n      src=\"https://codepen.io/steellett/embed/VwabgMX?height=265&theme-id=dark&default-tab=css,result\"\r\n      frameborder=\"no\"\r\n      loading=\"lazy\"\r\n      allowtransparency=\"true\"\r\n      allowfullscreen=\"true\"\r\n    >\r\n      See the Pen\r\n      <a href=\"https://codepen.io/steellett/pen/VwabgMX\">VwabgMX</a> by\r\n      steellett (<a href=\"https://codepen.io/steellett\">@steellett</a>) on\r\n      <a href=\"https://codepen.io\">CodePen</a>.\r\n    </iframe>\r\n    <p>\r\n      С помощью CSS transitions можно анимировать почти все свойства и создавать\r\n      много интересных, красивых, функциональных и даже сложных анимаций,\r\n      которые будут дополнять и улучшать ваш проект. Например, я сделал вот\r\n      такой Material-FAB на чистом CSS, используя transitions:\r\n    </p>\r\n    <iframe\r\n      height=\"400\"\r\n      style=\"width: 80%;\"\r\n      scrolling=\"no\"\r\n      title=\"PoNmVJX\"\r\n      src=\"https://codepen.io/steellett/embed/PoNmVJX?height=265&theme-id=dark&default-tab=css,result\"\r\n      frameborder=\"no\"\r\n      loading=\"lazy\"\r\n      allowtransparency=\"true\"\r\n      allowfullscreen=\"true\"\r\n    >\r\n      See the Pen\r\n      <a href=\"https://codepen.io/steellett/pen/PoNmVJX\">PoNmVJX</a> by\r\n      steellett (<a href=\"https://codepen.io/steellett\">@steellett</a>) on\r\n      <a href=\"https://codepen.io\">CodePen</a>.\r\n    </iframe>\r\n    <h3>CSS animations</h3>\r\n    <p>\r\n      CSS animations позволяют делать более сложные анимации, нежели CSS\r\n      transitions. Весь секрет в @keyframes. Правило @keyframes позволяет\r\n      создавать анимацию с помощью набора ключевых кадров, то есть описывает\r\n      состояние объекта в определенный момент времени. Давайте рассмотрим\r\n      простой пример.\r\n    </p>\r\n    <p>Наш круг ожил и он как будто пульсирует.</p>\r\n    <iframe\r\n      height=\"400\"\r\n      style=\"width: 80%;\"\r\n      scrolling=\"no\"\r\n      title=\"QWNvYOL\"\r\n      src=\"https://codepen.io/steellett/embed/QWNvYOL?height=265&theme-id=dark&default-tab=css,result\"\r\n      frameborder=\"no\"\r\n      loading=\"lazy\"\r\n      allowtransparency=\"true\"\r\n      allowfullscreen=\"true\"\r\n    >\r\n      See the Pen\r\n      <a href=\"https://codepen.io/steellett/pen/QWNvYOL\">QWNvYOL</a> by\r\n      steellett (<a href=\"https://codepen.io/steellett\">@steellett</a>) on\r\n      <a href=\"https://codepen.io\">CodePen</a>.\r\n    </iframe>\r\n    <p>Есть 9 свойств, которые позволяют контролировать CSS animations:</p>\r\n    <ul>\r\n      <li>animation-name;</li>\r\n      <li>animation-duration;</li>\r\n      <li>animation-timing-function;</li>\r\n      <li>animation-delay;</li>\r\n      <li>animation-iteration-count;</li>\r\n      <li>animation-direction;</li>\r\n      <li>animation-play-state;</li>\r\n      <li>animation-fill-mode;</li>\r\n      <li>animation;</li>\r\n    </ul>\r\n    <p>\r\n      <b> animation-name</b> — здесь указвается имя анимации, которое связывает\r\n      правило @keyframes с селектором. Пример:\r\n    </p>\r\n    <p>\r\n      <b><i>animation-name: my-animation;</i></b>\r\n    </p>\r\n    <p>\r\n      <b\r\n        ><i>\r\n          @keyframes my-animation {<br />\r\n          0% { opacity: 0; }<br />\r\n          100% { opacity: 1; }<br />\r\n          }</i\r\n        ></b\r\n      >\r\n    </p>\r\n    <p>\r\n      <b> animation-iteration-count</b> — задаёт количество повторов анимации,\r\n      значение по умолчанию 1. Значение infinite означает, что анимация будет\r\n      проигрываться бесконечно. Пример:\r\n    </p>\r\n    <p>\r\n      <b><i> animation-iteration-count: 2;</i></b>\r\n    </p>\r\n    <p>animation-direction — задаёт направление анимации. Пример:</p>\r\n    <p>\r\n      <b><i>animation-direction: reverse; </i></b>\r\n    </p>\r\n    <p>\r\n      <b> animation-play-state</b> — данное свойство управляет остановкой и\r\n      прогрыванием анимации. Есть два значения, running (анимация проигрывается,\r\n      по умолчанию) и paused (останавливает анимацию). Пример:\r\n    </p>\r\n\r\n    <p>\r\n      <b><i>animation-play-state: paused; </i></b>\r\n    </p>\r\n    <p>\r\n      animation-fill-mode — устанавливает, какие CSS-свойства будут приминены к\r\n      объекту до или после анимации. Может принимать такие значения:\r\n    </p>\r\n    <ul>\r\n      <li>\r\n        none — анимируемые CSS-свойства применятся к объекту только во время\r\n        воспроизведения анимации, по окончании объект возвращается в исходное\r\n        состояние;\r\n      </li>\r\n      <li>\r\n        forwards — анимируемые CSS-свойства применятся к объекту по окончании\r\n        воспроизведения анимации;\r\n      </li>\r\n      <li>\r\n        backwards — анимируемые CSS-свойства применятся к объекту до начала\r\n        воспроизведения анимации;\r\n      </li>\r\n      <li>\r\n        both — анимируемые CSS-свойства применятся к объекту и до начала, и\r\n        после окончания воспроизведения анимации;\r\n      </li>\r\n    </ul>\r\n    <p>Пример:</p>\r\n    <p>\r\n      <b><i>animation-fill-mode: backwards; </i></b>\r\n    </p>\r\n    <p>\r\n      Свойства\r\n      <b> animation-duration, animation-timing-function, animation-delay</b>\r\n      работают так же, как аналогичные свойства в CSS transitions, о которых я\r\n      писал раньше, поэтому не буду повторяться.\r\n    </p>\r\n    <p>\r\n      С помощью animations CSS можно создавать довольно сложные анимации без\r\n      использования JavaScript. Яркий пример — это лоадеры, то есть элементы,\r\n      которые показывают, что на вашей страничке что-то загружается. Вот\r\n      несколько примеров:\r\n    </p>\r\n    <iframe\r\n      height=\"400\"\r\n      style=\"width: 80%;\"\r\n      scrolling=\"no\"\r\n      title=\"OJNmdzq\"\r\n      src=\"https://codepen.io/steellett/embed/OJNmdzq?height=265&theme-id=dark&default-tab=css,result\"\r\n      frameborder=\"no\"\r\n      loading=\"lazy\"\r\n      allowtransparency=\"true\"\r\n      allowfullscreen=\"true\"\r\n    >\r\n      See the Pen\r\n      <a href=\"https://codepen.io/steellett/pen/OJNmdzq\">OJNmdzq</a> by\r\n      steellett (<a href=\"https://codepen.io/steellett\">@steellett</a>) on\r\n      <a href=\"https://codepen.io\">CodePen</a>.\r\n    </iframe>\r\n\r\n    <h3>Motion Path Module</h3>\r\n    <p>\r\n      Motion Path Module CSS позволяет создавать движение объектов по контуру\r\n      через специальное свойство motion-path. Раньше такую анимацию можно было\r\n      сделать только с помощью SVG или сложных скриптов.\r\n    </p>\r\n    <p>В этой спецификаии есть 3 свойства:</p>\r\n    <ul>\r\n      <li>motion-path;</li>\r\n      <li>motion-offset;</li>\r\n      <li>motion-rotation;</li>\r\n    </ul>\r\n    <p>\r\n      <b> motion-path</b> — это свойство позволяет указать точки(координаты) по\r\n      которым будет двигаться объект. Синтаксис такой же как у SVG-атрибута\r\n      path. Пример:\r\n    </p>\r\n    <p>\r\n      <b\r\n        ><i\r\n          >motion-path: path('M 235,323 Q 412,440 365,615 Q 400,300 670,240 L\r\n          870,340 L 975,535 Q 730,600 630,535 z');\r\n        </i></b\r\n      >\r\n    </p>\r\n    <p>\r\n      <b> motion-offset</b> — это свойство приводит объект в движение от\r\n      начальной точки до конечной. Оно принимает либо двойное значение длины,\r\n      либо проценты. Чтобы объект начал двигаться, нужно определить анимацию,\r\n      которая будет идти от 0 до 100%. Пример:\r\n    </p>\r\n    <p>\r\n      <b\r\n        ><i\r\n          >@keyframes airplane-fly { <br />\r\n          0% { motion-offset: 0; }<br />\r\n          100% { motion-offset: 100%; }<br />\r\n          }</i\r\n        ></b\r\n      >\r\n    </p>\r\n    <p>\r\n      motion-rotation — это свойство позволяет указать, какой стороной вперед\r\n      будет двигаться объект. Можно указать auto, reverse или свое значение в\r\n      градусах ('-45deg', '30deg' и т.д). Пример:\r\n    </p>\r\n    <p>\r\n      <b><i>motion-rotation: auto; </i></b>\r\n    </p>\r\n    <p>\r\n      К сожалению, motion-path пока что поддержывается только в Chrome и Opera,\r\n      но будем надеяться, что остальные браузеры в скором времени возьмут с них\r\n      пример, ведь штука действительно полезная.\r\n    </p>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"transition\",\r\n};\r\n</script>\r\n\r\n<style SCOPED>\r\np {\r\n  margin: 0.5em;\r\n}\r\n</style>\r\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./transition.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./transition.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./transition.vue?vue&type=template&id=d4026a3c&\"\nimport script from \"./transition.vue?vue&type=script&lang=js&\"\nexport * from \"./transition.vue?vue&type=script&lang=js&\"\nimport style0 from \"./transition.vue?vue&type=style&index=0&SCOPED=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./transition.vue?vue&type=style&index=0&SCOPED=true&lang=css&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./transition.vue?vue&type=style&index=0&SCOPED=true&lang=css&\""],"sourceRoot":""}